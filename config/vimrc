if &compatible
	set nocompatible
endif

let $VIMPATH = fnamemodify(resolve(expand('<sfile>:p')), ':h:h')
let $VARPATH = expand(($XDG_CACHE_HOME ? $XDG_CACHE_HOME : '~/.cache').'/vim')

let g:maplocalleader=';'
let g:mapleader=','
let g:python_host_prog=expand('~/.pyenv/versions/neovim2/bin/python')
let g:python3_host_prog=expand('~/.pyenv/versions/neovim3/bin/python')

if has('pythonx')
	if has('python3')
		set pyxversion=3
	elseif has('python')
		set pyxversion=2
	endif
endif

function! s:source_file(path, ...) abort
	let use_global = get(a:000, 0, ! has('vim_starting'))
	let abspath = resolve(expand($VIMPATH.'/config/'.a:path))
	if ! use_global
		execute 'source' fnameescape(abspath)
		return
	endif

	let content = map(readfile(abspath),
		\ "substitute(v:val, '^\\W*\\zsset\\ze\\W', 'setglobal', '')")
	let tempfile = tempname()
	try
		call writefile(content, tempfile)
		execute printf('source %s', fnameescape(tempfile))
	finally
		if filereadable(tempfile)
			call delete(tempfile)
		endif
	endtry
endfunction

augroup MyAutoCmd
	autocmd!
	autocmd CursorHold *? syntax sync minlines=300
augroup END

set runtimepath+=~/.cache/dein/repos/github.com/Shougo/dein.vim

call s:source_file('plugins.vim')
call s:source_file('plugin-setup.vim')

" if ! has('vim_starting')
	call dein#call_hook('source')
	call dein#call_hook('post_source')
" endif


call s:source_file('general.vim')
" call s:source_file('filetype.vim')
call s:source_file('powerline.vim')
call s:source_file('keybindings.vim')
